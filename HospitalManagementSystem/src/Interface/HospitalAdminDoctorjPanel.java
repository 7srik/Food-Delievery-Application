/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Interface;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import javax.swing.JOptionPane;
import Source.Doctor;
import Source.DoctorDirectory;
import Source.City;
import Source.Person;

/**
 *
 * @author srikr
 */
public class HospitalAdminDoctorjPanel extends javax.swing.JPanel {

    /**
     * Creates new form HospitalAdminDoctorjPanel
     */
    private DoctorDirectory phistory;
    int g=0;
    public HospitalAdminDoctorjPanel() {
        initComponents();
        this.phistory = new DoctorDirectory();
        populateTable();
        loadComboBoxData();
        jPersonidtxt.setEditable(false);
        jUpdatebtn.setEnabled(false);
    }
    private void clearFields(){
        jPersonidtxt.setText(null);
        jNametxt.setText(null);
        jAgetxt.setText(null);
        jCitycmb.setSelectedItem(null);
        jCommunitycmb.setSelectedItem(null);
        jHospitalcmb.setSelectedItem(null);
        jAddresstxt.setText(null);
        jMalebtn.setSelected(false);
        jFemalebtn.setSelected(false);
        jLgbtqbtn.setSelected(false);
        jGenderbtngrp.clearSelection();
        jPhonenotxt.setText(null);
        jEmailidtxt.setText(null);
        jUsernametxt.setText(null);
        jPasswordtxt.setText(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jGenderbtngrp = new javax.swing.ButtonGroup();
        jCommunitycmb = new javax.swing.JComboBox<>();
        jReadbtn = new javax.swing.JButton();
        jPersonalinfolbl = new javax.swing.JLabel();
        jUpdatebtn = new javax.swing.JButton();
        jPhonenolbl = new javax.swing.JLabel();
        jMalebtn = new javax.swing.JRadioButton();
        jFemalebtn = new javax.swing.JRadioButton();
        jPersonidlbl = new javax.swing.JLabel();
        jLgbtqbtn = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jAddresstxt = new javax.swing.JTextField();
        jUsernamelbl = new javax.swing.JLabel();
        jPasswordlbl = new javax.swing.JLabel();
        jUsernametxt = new javax.swing.JTextField();
        jPasswordtxt = new javax.swing.JTextField();
        jDoctordetailsheadinglbl = new javax.swing.JLabel();
        jDScrollPane = new javax.swing.JScrollPane();
        jDoctortbl = new javax.swing.JTable();
        jEmailidtxt = new javax.swing.JTextField();
        jCommunitylbl = new javax.swing.JLabel();
        jAgetxt = new javax.swing.JTextField();
        jCitylbl = new javax.swing.JLabel();
        jNamelbl = new javax.swing.JLabel();
        jCitycmb = new javax.swing.JComboBox<>();
        jCreatebtn = new javax.swing.JButton();
        jPhonenotxt = new javax.swing.JTextField();
        jPersonidtxt = new javax.swing.JTextField();
        jAgelbl = new javax.swing.JLabel();
        jEmailidlbl = new javax.swing.JLabel();
        jNametxt = new javax.swing.JTextField();
        jGenderlbl = new javax.swing.JLabel();
        jHospitallbl = new javax.swing.JLabel();
        jHospitalcmb = new javax.swing.JComboBox<>();
        jSearchbtn = new javax.swing.JButton();
        jSearchtxt = new javax.swing.JTextField();

        jReadbtn.setBackground(new java.awt.Color(255, 204, 51));
        jReadbtn.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        jReadbtn.setText("READ");
        jReadbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jReadbtnActionPerformed(evt);
            }
        });

        jPersonalinfolbl.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        jPersonalinfolbl.setText("Doctor Information");

        jUpdatebtn.setBackground(new java.awt.Color(255, 204, 51));
        jUpdatebtn.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        jUpdatebtn.setText("UPDATE");
        jUpdatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jUpdatebtnActionPerformed(evt);
            }
        });

        jPhonenolbl.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        jPhonenolbl.setText("Phone Number :");

        jGenderbtngrp.add(jMalebtn);
        jMalebtn.setText("Male");

        jGenderbtngrp.add(jFemalebtn);
        jFemalebtn.setText("Female");

        jPersonidlbl.setFont(new java.awt.Font("Segoe UI Variable", 1, 14)); // NOI18N
        jPersonidlbl.setText("Doctor Unique ID :");

        jGenderbtngrp.add(jLgbtqbtn);
        jLgbtqbtn.setText("LGBTQ+");

        jLabel1.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        jLabel1.setText("Address :");

        jUsernamelbl.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        jUsernamelbl.setText("USERNAME :");

        jPasswordlbl.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        jPasswordlbl.setText("PASSWORD :");

        jDoctordetailsheadinglbl.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        jDoctordetailsheadinglbl.setText("DOCTOR DETAILS :");

        jDoctortbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Doctor ID", "Name", "Hospital", "Age", "Gender", "Phone number", "Address", "Email ID", "Community", "City", "USERNAME", "PASSWORD"
            }
        ));
        jDScrollPane.setViewportView(jDoctortbl);

        jEmailidtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jEmailidtxtActionPerformed(evt);
            }
        });

        jCommunitylbl.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        jCommunitylbl.setText("Community :");

        jAgetxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAgetxtActionPerformed(evt);
            }
        });
        jAgetxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jAgetxtKeyTyped(evt);
            }
        });

        jCitylbl.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        jCitylbl.setText("City :");

        jNamelbl.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        jNamelbl.setText("Name :");

        jCreatebtn.setBackground(new java.awt.Color(255, 204, 51));
        jCreatebtn.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        jCreatebtn.setText("CREATE");
        jCreatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCreatebtnActionPerformed(evt);
            }
        });

        jPhonenotxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jPhonenotxtKeyTyped(evt);
            }
        });

        jPersonidtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPersonidtxtActionPerformed(evt);
            }
        });

        jAgelbl.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        jAgelbl.setText("Age :");

        jEmailidlbl.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        jEmailidlbl.setText("Email ID :");

        jNametxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jNametxtKeyTyped(evt);
            }
        });

        jGenderlbl.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        jGenderlbl.setText("Gender :");

        jHospitallbl.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        jHospitallbl.setText("Hospital :");

        jSearchbtn.setText("SEARCH");
        jSearchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSearchbtnActionPerformed(evt);
            }
        });

        jSearchtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSearchtxtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jNamelbl, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jAgelbl, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jEmailidlbl, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jUsernamelbl, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jUsernametxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPasswordlbl))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jAgetxt, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jNametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jGenderlbl, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jPhonenolbl, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jEmailidtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jCitylbl)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jPhonenotxt))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jMalebtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jFemalebtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLgbtqbtn))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jPasswordtxt)
                                    .addComponent(jCitycmb, 0, 200, Short.MAX_VALUE))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jHospitallbl)
                            .addComponent(jCommunitylbl)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jCommunitycmb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jHospitalcmb, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jAddresstxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDScrollPane)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jDoctordetailsheadinglbl)
                                        .addGap(82, 82, 82)
                                        .addComponent(jSearchtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jSearchbtn))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jCreatebtn)
                                        .addGap(18, 18, 18)
                                        .addComponent(jUpdatebtn))
                                    .addComponent(jReadbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jPersonalinfolbl)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(197, 197, 197)
                                        .addComponent(jPersonidlbl)
                                        .addGap(18, 18, 18)
                                        .addComponent(jPersonidtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(173, 173, 173))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jCreatebtn, jReadbtn, jUpdatebtn});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jEmailidtxt, jUsernametxt});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jAddresstxt, jHospitalcmb});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jDoctordetailsheadinglbl)
                    .addComponent(jSearchbtn)
                    .addComponent(jSearchtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jDScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jReadbtn, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPersonalinfolbl)
                    .addComponent(jPersonidlbl)
                    .addComponent(jPersonidtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jGenderlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jMalebtn)
                                    .addComponent(jFemalebtn)
                                    .addComponent(jLgbtqbtn))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jPhonenotxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jPhonenolbl)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jNamelbl)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jNametxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jAgetxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jAgelbl)))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jEmailidtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jEmailidlbl)
                            .addComponent(jCitylbl)
                            .addComponent(jCitycmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jAddresstxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jCommunitylbl)
                                .addComponent(jCommunitycmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jHospitallbl)
                                    .addComponent(jHospitalcmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(40, 40, 40)))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jUsernamelbl)
                    .addComponent(jUsernametxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPasswordlbl)
                    .addComponent(jPasswordtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jUpdatebtn)
                    .addComponent(jCreatebtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jCreatebtn, jReadbtn, jUpdatebtn});

    }// </editor-fold>//GEN-END:initComponents

    private void jReadbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jReadbtnActionPerformed
        // TODO add your handling code here:
        jPersonidtxt.setEditable(true);
        jUpdatebtn.setEnabled(true);
        int selectedrow = jDoctortbl.getSelectedRow();
        if (selectedrow < 0){
            JOptionPane.showMessageDialog(null, "please select");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) jDoctortbl.getModel();
        String personid = model.getValueAt(jDoctortbl.getSelectedRow(),0).toString();
        String name = model.getValueAt(jDoctortbl.getSelectedRow(),1).toString();
        String hospital = model.getValueAt(jDoctortbl.getSelectedRow(),2).toString();
        String age = model.getValueAt(jDoctortbl.getSelectedRow(),3).toString();
        String gender = model.getValueAt(jDoctortbl.getSelectedRow(),4).toString();
        String phoneno = model.getValueAt(jDoctortbl.getSelectedRow(),5).toString();
        String address = model.getValueAt(jDoctortbl.getSelectedRow(),6).toString();
        String emailid = model.getValueAt(jDoctortbl.getSelectedRow(),7).toString();
        String community = model.getValueAt(jDoctortbl.getSelectedRow(),8).toString();
        String city = model.getValueAt(jDoctortbl.getSelectedRow(),9).toString();
        String uname = model.getValueAt(jDoctortbl.getSelectedRow(),10).toString();
        String pwd = model.getValueAt(jDoctortbl.getSelectedRow(),11).toString();

        jPersonidtxt.setText(personid);
        jPersonidtxt.setEditable(false);
        jNametxt.setText(name);
        jHospitalcmb.setSelectedItem(hospital);
        jAgetxt.setText(age);
        switch (gender) {
            case "Male" -> //genderGroup.setSelected((ButtonModel) btnMale, true);
            jMalebtn.setSelected(true);
            case "Female" -> //genderGroup.setSelected(btnF, true);
            jFemalebtn.setSelected(true);
            default -> jLgbtqbtn.setSelected(true);
        }
        jPhonenotxt.setText(phoneno);
        jEmailidtxt.setText(emailid);
        jAddresstxt.setText(address);
        jCitycmb.setSelectedItem(city);
        jCommunitycmb.setSelectedItem(community);
        jUsernametxt.setText(uname);
        jPasswordtxt.setText(pwd);
    }//GEN-LAST:event_jReadbtnActionPerformed

    private void jUpdatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jUpdatebtnActionPerformed
        // TODO add your handling code here:
        short checkName = 0;
        short checkAge = 0;
        short checkGender = 0;
        short checkPhoneno = 0;
        short checkEmailid = 0;
        short checkAddress = 0;
        short checkCommunity = 0;
        short checkCity = 0;
        short checkHospital = 0;
        short checkUname = 0;
        short checkPwd = 0;

        if (jMalebtn.isSelected()) {
            g=1;
        }
        else if (jFemalebtn.isSelected()) {
            g=2;
        }
        else if (jLgbtqbtn.isSelected()) {
            g=3;
        }
        //short checkPersonUsername = 0;
        //short checkPersonPassword = 0;
        try{
            if (jNametxt.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "Please provide Name");
                jNametxt.setText("");
                checkName = 1;
            }
            if (jAgetxt.getText().isEmpty() && checkName==0){
                JOptionPane.showMessageDialog(null, "Please provide Age");
                jAgetxt.setText("");
                checkAge = 1;
            }
            if (g == 0 && checkName==0 && checkAge==0){
                JOptionPane.showMessageDialog(null, "Please provide Gender");
                checkGender = 1;
            }
            if (jPhonenotxt.getText().isEmpty() && checkGender==0 && checkName==0 && checkAge==0){
                JOptionPane.showMessageDialog(null, "Please provide Phone Number");
                jPhonenotxt.setText("");
                checkPhoneno = 1;
            }
            if (jEmailidtxt.getText().isEmpty() && checkGender==0 && checkName==0 && checkAge==0
                && checkPhoneno==0){
                JOptionPane.showMessageDialog(null, "Please provide Email ID");
                jEmailidtxt.setText("");
                checkEmailid = 1;
            }
            if (jAddresstxt.getText().isEmpty() && checkGender==0 && checkName==0 && checkAge==0
                && checkPhoneno==0 && checkEmailid==0){
                JOptionPane.showMessageDialog(null, "Please provide Address");
                jAddresstxt.setText("");
                checkAddress = 1;
            }
            if (jCommunitycmb.getSelectedItem().toString().isEmpty() && checkGender==0 && checkName==0 && checkAge==0
                && checkPhoneno==0 && checkEmailid==0 && checkAddress==0){
                JOptionPane.showMessageDialog(null, "Please provide Community");
                jCommunitycmb.setSelectedItem(null);
                checkCommunity = 1;
            }
            if (jCitycmb.getSelectedItem().toString().isEmpty() && checkGender==0 && checkName==0 && checkAge==0
                && checkPhoneno==0 && checkEmailid==0 && checkAddress==0 && checkCommunity==0){
                JOptionPane.showMessageDialog(null, "Please provide City");
                jCitycmb.setSelectedItem(null);
                checkCity = 1;
            }
            if (jUsernametxt.getText().isEmpty() && checkGender==0 && checkName==0 && checkAge==0
                && checkPhoneno==0 && checkEmailid==0 && checkAddress==0 && checkCommunity==0 && checkCity == 0){
                JOptionPane.showMessageDialog(null, "Please provide Person Username");
                jUsernametxt.setText("");
                checkUname = 1;
            }
            if (jPasswordtxt.getText().isEmpty() && checkGender==0 && checkName==0 && checkAge==0
                && checkPhoneno==0 && checkEmailid==0 && checkAddress==0 && checkCommunity==0
                && checkCity == 0 && checkUname == 0){
                JOptionPane.showMessageDialog(null, "Please provide Person Password");
                jPasswordtxt.setText("");
                checkPwd = 1;
            }
            if (jHospitalcmb.getSelectedItem().toString().isEmpty() && checkGender==0 && checkName==0 && checkAge==0
                && checkPhoneno==0 && checkEmailid==0 && checkAddress==0 && checkCommunity==0
                && checkCity == 0 && checkUname == 0 && checkPwd == 0){
                JOptionPane.showMessageDialog(null, "Please provide Hospital");
                jHospitalcmb.setSelectedItem(null);
                checkHospital = 1;
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Error in provided Details");
        }
        if (checkCity==0 && checkGender==0 && checkName==0 && checkAge==0
            && checkPhoneno==0 && checkEmailid==0 && checkAddress==0
            && checkCommunity==0 && checkHospital == 0 && checkUname == 0 && checkPwd == 0){
            int selectedRowIndex = jDoctortbl.getSelectedRow();
            DefaultTableModel model = (DefaultTableModel) jDoctortbl.getModel();
            if (selectedRowIndex >= 0)
            {
                model.setValueAt(jPersonidtxt.getText(), selectedRowIndex,0);
                model.setValueAt(jNametxt.getText(), selectedRowIndex,1);
                model.setValueAt(jHospitalcmb.getSelectedItem(), selectedRowIndex,2);
                model.setValueAt(jAgetxt.getText(), selectedRowIndex,3);
                String genderValue="";
                if (jMalebtn.isSelected()) genderValue="Male";
                else if (jFemalebtn.isSelected()) genderValue="Female";
                else if (jLgbtqbtn.isSelected()) genderValue="LGBTQ+";
                model.setValueAt(genderValue, selectedRowIndex, 4);
                model.setValueAt(jPhonenotxt.getText(), selectedRowIndex,5);
                model.setValueAt(jAddresstxt.getText(), selectedRowIndex,6);
                model.setValueAt(jEmailidtxt.getText(), selectedRowIndex,7);
                model.setValueAt(jCommunitycmb.getSelectedItem(), selectedRowIndex,8);
                model.setValueAt(jCitycmb.getSelectedItem(), selectedRowIndex,9);
                model.setValueAt(jUsernametxt.getText(), selectedRowIndex,10);
                model.setValueAt(jPasswordtxt.getText(), selectedRowIndex,11);
            }
            else{
                JOptionPane.showMessageDialog(this, "Please Select a row to View.");
            }
            int personid = (Integer.parseInt(jPersonidtxt.getText()));
            String name = (jNametxt.getText());
            int age = (Integer.parseInt(jAgetxt.getText()));
            String gender;
            switch (g) {
                case 1 -> gender = (jMalebtn.getText());
                case 2 -> gender = (jFemalebtn.getText());
                default -> gender = (jLgbtqbtn.getText());
            }
            long phoneno = (Long.parseLong(jPhonenotxt.getText()));
            String emailid = (jEmailidtxt.getText());
            String address = (jAddresstxt.getText());
            String hospital = (jHospitalcmb.getSelectedItem().toString());
            String community = (jCommunitycmb.getSelectedItem().toString());
            String city = (jCitycmb.getSelectedItem().toString());
            String uname = (jUsernametxt.getText());
            String pwd = (jPasswordtxt.getText());
            Doctor p = new Doctor(personid,name,hospital,age,gender,phoneno,emailid,address,city,community,uname,pwd);
            JOptionPane.showMessageDialog(null, "Doctor Data Updated for Unique id :  "+personid);
            clearFields();
            //PersonInfojPanel personinfo = new PersonInfojPanel(person,patient);
            //personinfo.setVisible(true);
            //setVisible(false);
        } else {
            JOptionPane.showMessageDialog(null, "Cannot Update Doctor, Please provide all the details");
        }
    }//GEN-LAST:event_jUpdatebtnActionPerformed

    private void jEmailidtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jEmailidtxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jEmailidtxtActionPerformed

    private void jAgetxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAgetxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jAgetxtActionPerformed

    private void jAgetxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jAgetxtKeyTyped
        // TODO add your handling code here:
        char value = evt.getKeyChar();
        if((!Character.isDigit(value))){
            evt.consume();
        }
    }//GEN-LAST:event_jAgetxtKeyTyped

    private void jCreatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCreatebtnActionPerformed
        // TODO add your handling code here:
        short checkName = 0;
        short checkAge = 0;
        short checkGender = 0;
        short checkPhoneno = 0;
        short checkEmailid = 0;
        short checkAddress = 0;
        short checkCommunity = 0;
        short checkCity = 0;
        short checkHospital = 0;
        short checkUname = 0;
        short checkPwd = 0;
        int c =0;

        if (jMalebtn.isSelected()) {
            g=1;
        }
        else if (jFemalebtn.isSelected()) {
            g=2;
        }
        else if (jLgbtqbtn.isSelected()) {
            g=3;
        }
        //short checkPersonUsername = 0;
        //short checkPersonPassword = 0;
        try{
            if (jNametxt.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "Please provide Name");
                jNametxt.setText("");
                checkName = 1;
            }
            if (jAgetxt.getText().isEmpty() && checkName==0){
                JOptionPane.showMessageDialog(null, "Please provide Age");
                jAgetxt.setText("");
                checkAge = 1;
            }
            if (g == 0 && checkName==0 && checkAge==0){
                JOptionPane.showMessageDialog(null, "Please provide Gender");
                checkGender = 1;
            }
            if (jPhonenotxt.getText().isEmpty() && checkGender==0 && checkName==0 && checkAge==0){
                JOptionPane.showMessageDialog(null, "Please provide Phone Number");
                jPhonenotxt.setText("");
                checkPhoneno = 1;
            }
            if (jEmailidtxt.getText().isEmpty() && checkGender==0 && checkName==0 && checkAge==0
                && checkPhoneno==0){
                JOptionPane.showMessageDialog(null, "Please provide Email ID");
                jEmailidtxt.setText("");
                checkEmailid = 1;
            }
            if (jAddresstxt.getText().isEmpty() && checkGender==0 && checkName==0 && checkAge==0
                && checkPhoneno==0 && checkEmailid==0){
                JOptionPane.showMessageDialog(null, "Please provide Address");
                jAddresstxt.setText("");
                checkAddress = 1;
            }
            if (jCommunitycmb.getSelectedItem().toString().isEmpty() && checkGender==0 && checkName==0 && checkAge==0
                && checkPhoneno==0 && checkEmailid==0 && checkAddress==0){
                JOptionPane.showMessageDialog(null, "Please provide Community");
                jCommunitycmb.setSelectedItem(null);
                checkCommunity = 1;
            }
            if (jCitycmb.getSelectedItem().toString().isEmpty() && checkGender==0 && checkName==0 && checkAge==0
                && checkPhoneno==0 && checkEmailid==0 && checkAddress==0 && checkCommunity==0){
                JOptionPane.showMessageDialog(null, "Please provide City");
                jCitycmb.setSelectedItem(null);
                checkCity = 1;
            }
            if (jUsernametxt.getText().isEmpty() && checkGender==0 && checkName==0 && checkAge==0
                && checkPhoneno==0 && checkEmailid==0 && checkAddress==0 && checkCommunity==0 && checkCity == 0){
                JOptionPane.showMessageDialog(null, "Please provide Person Username");
                jUsernametxt.setText("");
                checkUname = 1;
            }
            if (jPasswordtxt.getText().isEmpty() && checkGender==0 && checkName==0 && checkAge==0
                && checkPhoneno==0 && checkEmailid==0 && checkAddress==0 && checkCommunity==0
                && checkCity == 0 && checkUname == 0){
                JOptionPane.showMessageDialog(null, "Please provide Person Password");
                jPasswordtxt.setText("");
                checkPwd = 1;
            }
            if (jHospitalcmb.getSelectedItem().toString().isEmpty() && checkGender==0 && checkName==0 && checkAge==0
                && checkPhoneno==0 && checkEmailid==0 && checkAddress==0 && checkCommunity==0
                && checkCity == 0 && checkUname == 0 && checkPwd == 0){
                JOptionPane.showMessageDialog(null, "Please provide Hospital");
                jHospitalcmb.setSelectedItem(null);
                checkHospital = 1;
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Error in provided Details");
            c=1;
        }
        if (checkCity==0 && checkGender==0 && checkName==0 && checkAge==0
            && checkPhoneno==0 && checkEmailid==0 && checkAddress==0
            && checkCommunity==0 && checkHospital == 0 && checkUname == 0 && checkPwd == 0 && c == 0){
            Doctor pr = phistory.addNewDoctorDetails();
            pr.setName(jNametxt.getText());
            pr.setAge(Integer.parseInt(jAgetxt.getText()));
            switch (g) {
                case 1 -> pr.setGender(jMalebtn.getText());
                case 2 -> pr.setGender(jFemalebtn.getText());
                default -> pr.setGender(jLgbtqbtn.getText());
            }
            g=0;
            pr.setPhoneno(Long.parseLong(jPhonenotxt.getText()));
            pr.setEmailid(jEmailidtxt.getText());
            pr.setAddress(jAddresstxt.getText());
            pr.setCommunity((String) jCommunitycmb.getSelectedItem());
            pr.setCity((String) jCitycmb.getSelectedItem());
            pr.setHospital((String) jHospitalcmb.getSelectedItem());
            pr.setDocUsername(jUsernametxt.getText());
            pr.setDocPassword(jPasswordtxt.getText());
            JOptionPane.showMessageDialog(null, "Doctor Created, Unique id is :  "+pr.getPersonid()+"\nPlease use your Unique id as DOCTOR USERNAME and DOCTOR PASSWORD.");
            populateTable();
            clearFields();
            //PersonInfojPanel personinfo = new PersonInfojPanel(person,patient);
            //personinfo.setVisible(true);
            //setVisible(false);
        } else {
            JOptionPane.showMessageDialog(null, "Cannot Create Doctor, Please provide all the details");
        }
    }//GEN-LAST:event_jCreatebtnActionPerformed

    private void jPhonenotxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPhonenotxtKeyTyped
        // TODO add your handling code here:
        char value = evt.getKeyChar();
        if((!Character.isDigit(value))){
            evt.consume();
        }
    }//GEN-LAST:event_jPhonenotxtKeyTyped

    private void jPersonidtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPersonidtxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPersonidtxtActionPerformed

    private void jNametxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jNametxtKeyTyped
        // TODO add your handling code here:
        char value = evt.getKeyChar();
        if((!Character.isAlphabetic(value))){
            evt.consume();
        }
    }//GEN-LAST:event_jNametxtKeyTyped

    private void jSearchbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSearchbtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jDoctortbl.getModel();
        TableRowSorter<DefaultTableModel> tm = new TableRowSorter<>(model);
        jDoctortbl.setRowSorter(tm);
        tm.setRowFilter(RowFilter.regexFilter(jSearchtxt.getText().trim()));
        /*System.out.println(phistory.getPerson().size());
        String patient_ID =jSearchtxt.getText();
        Person personDetails = new Person();
        boolean test = false;
        for(Person pd:phistory.getPerson())
        {
            if(String.valueOf(pd.getPersonid()).equals(patient_ID))
            {
                personDetails = pd;
                jNametxt.setText(personDetails.getName());
                jPersonidtxt.setText(String.valueOf(personDetails.getPersonid()));
                jAgetxt.setText(String.valueOf(personDetails.getAge()));
                if (personDetails.getGender().equals("Male"))
                {
                    //genderGroup.setSelected((ButtonModel) btnMale, true);
                    jMalebtn.setSelected(true);
                }
                else if (personDetails.getGender().equals("Female"))
                {
                    //genderGroup.setSelected(btnF, true);
                    jFemalebtn.setSelected(true);
                }
                else
                {
                    jLgbtqbtn.setSelected(true);
                }

                jPhonenotxt.setText(String.valueOf(personDetails.getPhoneno()));
                jEmailidtxt.setText(personDetails.getEmailid());
                jAddresstxt.setText(personDetails.getAddress());
                jCitycmb.setSelectedItem(personDetails.getCity());
                System.out.println(personDetails.getCity());
                jCommunitycmb.setSelectedItem(personDetails.getCommunity());
                test = true;
                break;

            }
        }
        */
    }//GEN-LAST:event_jSearchbtnActionPerformed

    private void jSearchtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSearchtxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jSearchtxtActionPerformed

    private void loadComboBoxData(){
        jCitycmb.removeAllItems();
        jCommunitycmb.removeAllItems();
        jHospitalcmb.removeAllItems();
        for(City city: SystemHospitaljPanel.cityList){
            jCitycmb.addItem(city.getCityName());
        }
        for(City city: SystemHospitaljPanel.cityList){
            jCommunitycmb.addItem(city.getCommunity());
        }
        for(City city: SystemHospitaljPanel.cityList){
            jHospitalcmb.addItem(city.getHospital());
        }
        for(City city: HospitalAdminHospitaljPanel.cityList){
            jCitycmb.addItem(city.getCityName());
        }
        for(City city: HospitalAdminHospitaljPanel.cityList){
            jCommunitycmb.addItem(city.getCommunity());
        }
        for(City city: HospitalAdminHospitaljPanel.cityList){
            jHospitalcmb.addItem(city.getHospital());
        }
        jCitycmb.setSelectedIndex(-1);
        jCommunitycmb.setSelectedIndex(-1);
        jHospitalcmb.setSelectedIndex(-1);

    }
    
    private void populateTable() {
        
        DefaultTableModel model = (DefaultTableModel) jDoctortbl.getModel();
        model.setRowCount(0);
        
        for (Doctor pd : phistory.getDoctors()){
          
            Object[] row = new Object[12];
            row[0] = pd.getPersonid();
            row[1] = pd.getName();
            row[2] = pd.getHospital();
            row[3] = pd.getAge();
            row[4] = pd.getGender();
            row[5] = pd.getPhoneno();
            row[6] = pd.getAddress();
            row[7] = pd.getEmailid();
            row[8] = pd.getCommunity();
            row[9] = pd.getCity();
            row[10] = pd.getDocUsername();
            row[11] = pd.getDocPassword();
            
            model.addRow(row);

        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField jAddresstxt;
    private javax.swing.JLabel jAgelbl;
    private javax.swing.JTextField jAgetxt;
    private javax.swing.JComboBox<String> jCitycmb;
    private javax.swing.JLabel jCitylbl;
    private javax.swing.JComboBox<String> jCommunitycmb;
    private javax.swing.JLabel jCommunitylbl;
    private javax.swing.JButton jCreatebtn;
    private javax.swing.JScrollPane jDScrollPane;
    private javax.swing.JLabel jDoctordetailsheadinglbl;
    private javax.swing.JTable jDoctortbl;
    private javax.swing.JLabel jEmailidlbl;
    private javax.swing.JTextField jEmailidtxt;
    private javax.swing.JRadioButton jFemalebtn;
    private javax.swing.ButtonGroup jGenderbtngrp;
    private javax.swing.JLabel jGenderlbl;
    private javax.swing.JComboBox<String> jHospitalcmb;
    private javax.swing.JLabel jHospitallbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JRadioButton jLgbtqbtn;
    private javax.swing.JRadioButton jMalebtn;
    private javax.swing.JLabel jNamelbl;
    private javax.swing.JTextField jNametxt;
    private javax.swing.JLabel jPasswordlbl;
    private javax.swing.JTextField jPasswordtxt;
    private javax.swing.JLabel jPersonalinfolbl;
    private javax.swing.JLabel jPersonidlbl;
    private javax.swing.JTextField jPersonidtxt;
    private javax.swing.JLabel jPhonenolbl;
    private javax.swing.JTextField jPhonenotxt;
    private javax.swing.JButton jReadbtn;
    private javax.swing.JButton jSearchbtn;
    private javax.swing.JTextField jSearchtxt;
    private javax.swing.JButton jUpdatebtn;
    private javax.swing.JLabel jUsernamelbl;
    private javax.swing.JTextField jUsernametxt;
    // End of variables declaration//GEN-END:variables
}
