/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Interface;

import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import Source.Person;
import Source.PersonDirectory;
import Source.City;
import javax.swing.RowFilter;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author srikr
 */
public class SystemPatientjPanel extends javax.swing.JPanel {

    /**
     * Creates new form SystemPatientjPanel
     */
    PersonDirectory phistory;
    int g=0;
    public SystemPatientjPanel() {
        initComponents();
        this.phistory = new PersonDirectory();
        populateTable();
        loadComboBoxData();
        jPersonidtxt.setEditable(false);
        jUpdatebtn.setEnabled(false);
    }
    private void clearFields(){
        jPersonidtxt.setText(null);
        jNametxt.setText(null);
        jAgetxt.setText(null);
        jCitycmb.setSelectedItem(null);
        jCommunitycmb.setSelectedItem(null);
        jAddresstxt.setText(null);
        jMalebtn.setSelected(false);
        jFemalebtn.setSelected(false);
        jLgbtqbtn.setSelected(false);
        jGenderbtngrp.clearSelection();
        jPhonenotxt.setText(null);
        jEmailidtxt.setText(null);
        //jPersonUsernametxt.setText(null);
        //jPersonPasswordtxt.setText(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jGenderbtngrp = new javax.swing.ButtonGroup();
        jPatientdetailslbl = new javax.swing.JLabel();
        jPScrollPane = new javax.swing.JScrollPane();
        jPatienttbl = new javax.swing.JTable();
        jCreatebtn = new javax.swing.JButton();
        jReadbtn = new javax.swing.JButton();
        jUpdatebtn = new javax.swing.JButton();
        jDeletebtn = new javax.swing.JButton();
        jMalebtn = new javax.swing.JRadioButton();
        jFemalebtn = new javax.swing.JRadioButton();
        jPersonidlbl = new javax.swing.JLabel();
        jLgbtqbtn = new javax.swing.JRadioButton();
        jPhonenotxt = new javax.swing.JTextField();
        jPersonidtxt = new javax.swing.JTextField();
        jAgelbl = new javax.swing.JLabel();
        jEmailidlbl = new javax.swing.JLabel();
        jNametxt = new javax.swing.JTextField();
        jGenderlbl = new javax.swing.JLabel();
        jEmailidtxt = new javax.swing.JTextField();
        jCommunitylbl = new javax.swing.JLabel();
        jAgetxt = new javax.swing.JTextField();
        jAddresstxt = new javax.swing.JTextField();
        jCitylbl = new javax.swing.JLabel();
        jNamelbl = new javax.swing.JLabel();
        jAddresslbl = new javax.swing.JLabel();
        jCitycmb = new javax.swing.JComboBox<>();
        jCommunitycmb = new javax.swing.JComboBox<>();
        jPersonalinfolbl = new javax.swing.JLabel();
        jPhonenolbl = new javax.swing.JLabel();
        jSearchbtn = new javax.swing.JButton();
        jSearchtxt = new javax.swing.JTextField();

        jPatientdetailslbl.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        jPatientdetailslbl.setText("PATIENT DETAILS :");

        jPatienttbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient ID", "Name", "Age", "Gender", "Phone no", "Email ID", "Address", "Community", "City"
            }
        ));
        jPScrollPane.setViewportView(jPatienttbl);

        jCreatebtn.setBackground(new java.awt.Color(255, 204, 51));
        jCreatebtn.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        jCreatebtn.setText("CREATE");
        jCreatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCreatebtnActionPerformed(evt);
            }
        });

        jReadbtn.setBackground(new java.awt.Color(255, 204, 51));
        jReadbtn.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        jReadbtn.setText("READ");
        jReadbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jReadbtnActionPerformed(evt);
            }
        });

        jUpdatebtn.setBackground(new java.awt.Color(255, 204, 51));
        jUpdatebtn.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        jUpdatebtn.setText("UPDATE");
        jUpdatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jUpdatebtnActionPerformed(evt);
            }
        });

        jDeletebtn.setBackground(new java.awt.Color(255, 204, 51));
        jDeletebtn.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        jDeletebtn.setText("DELETE");
        jDeletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDeletebtnActionPerformed(evt);
            }
        });

        jGenderbtngrp.add(jMalebtn);
        jMalebtn.setText("Male");
        jMalebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMalebtnActionPerformed(evt);
            }
        });

        jGenderbtngrp.add(jFemalebtn);
        jFemalebtn.setText("Female");
        jFemalebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFemalebtnActionPerformed(evt);
            }
        });

        jPersonidlbl.setFont(new java.awt.Font("Segoe UI Variable", 1, 14)); // NOI18N
        jPersonidlbl.setText("Person Unique ID :");

        jGenderbtngrp.add(jLgbtqbtn);
        jLgbtqbtn.setText("LGBTQ+");
        jLgbtqbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jLgbtqbtnActionPerformed(evt);
            }
        });

        jPhonenotxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jPhonenotxtKeyTyped(evt);
            }
        });

        jPersonidtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPersonidtxtActionPerformed(evt);
            }
        });

        jAgelbl.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        jAgelbl.setText("Age :");

        jEmailidlbl.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        jEmailidlbl.setText("Email ID :");

        jNametxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jNametxtKeyTyped(evt);
            }
        });

        jGenderlbl.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        jGenderlbl.setText("Gender :");

        jCommunitylbl.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        jCommunitylbl.setText("Community :");

        jAgetxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAgetxtActionPerformed(evt);
            }
        });
        jAgetxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jAgetxtKeyTyped(evt);
            }
        });

        jAddresstxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jAddresstxtKeyTyped(evt);
            }
        });

        jCitylbl.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        jCitylbl.setText("City :");

        jNamelbl.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        jNamelbl.setText("Name :");

        jAddresslbl.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        jAddresslbl.setText("Address :");

        jPersonalinfolbl.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        jPersonalinfolbl.setText("Personal Information");

        jPhonenolbl.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        jPhonenolbl.setText("Phone Number :");

        jSearchbtn.setBackground(new java.awt.Color(255, 204, 51));
        jSearchbtn.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        jSearchbtn.setText("SEARCH");
        jSearchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSearchbtnActionPerformed(evt);
            }
        });

        jSearchtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSearchtxtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addComponent(jPScrollPane)
                .addGap(259, 259, 259))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(jPatientdetailslbl)
                        .addGap(111, 111, 111)
                        .addComponent(jSearchtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jSearchbtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jNamelbl, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jAgelbl, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jAgetxt, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jNametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jGenderlbl, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPhonenolbl, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jCitylbl, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jMalebtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jFemalebtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLgbtqbtn))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jCitycmb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jPhonenotxt, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)))
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCommunitylbl, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jAddresslbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jAddresstxt)
                                    .addComponent(jCommunitycmb, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jEmailidlbl)
                        .addGap(6, 6, 6)
                        .addComponent(jEmailidtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(247, 247, 247)
                        .addComponent(jPersonidlbl)
                        .addGap(18, 18, 18)
                        .addComponent(jPersonidtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jPersonalinfolbl))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(94, 94, 94)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jReadbtn)
                                    .addComponent(jCreatebtn))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDeletebtn)
                            .addComponent(jUpdatebtn))))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jDeletebtn, jSearchbtn});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jSearchbtn)
                        .addComponent(jSearchtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPatientdetailslbl))
                .addGap(18, 18, 18)
                .addComponent(jPScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jReadbtn)
                    .addComponent(jDeletebtn))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPersonalinfolbl)
                    .addComponent(jPersonidlbl)
                    .addComponent(jPersonidtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jAddresstxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jAddresslbl))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCommunitylbl)
                            .addComponent(jCommunitycmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jGenderlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jMalebtn)
                            .addComponent(jFemalebtn)
                            .addComponent(jLgbtqbtn))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jPhonenotxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPhonenolbl)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jNamelbl)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jNametxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jAgetxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jAgelbl)))))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jEmailidtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jEmailidlbl)
                    .addComponent(jCitylbl)
                    .addComponent(jCitycmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jUpdatebtn)
                    .addComponent(jCreatebtn))
                .addContainerGap(59, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jDeletebtn, jSearchbtn});

    }// </editor-fold>//GEN-END:initComponents

    private void jPersonidtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPersonidtxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPersonidtxtActionPerformed

    private void jAgetxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAgetxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jAgetxtActionPerformed

    private void jSearchbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSearchbtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jPatienttbl.getModel();
        TableRowSorter<DefaultTableModel> tm = new TableRowSorter<>(model);
        jPatienttbl.setRowSorter(tm);
        tm.setRowFilter(RowFilter.regexFilter(jSearchtxt.getText().trim()));
        /*System.out.println(phistory.getPerson().size());
        String patient_ID =jSearchtxt.getText();
        Person personDetails = new Person();
        boolean test = false;
        for(Person pd:phistory.getPerson())
        {
            if(String.valueOf(pd.getPersonid()).equals(patient_ID))
            {
                personDetails = pd;
                jNametxt.setText(personDetails.getName());
                jPersonidtxt.setText(String.valueOf(personDetails.getPersonid()));
                jAgetxt.setText(String.valueOf(personDetails.getAge()));
                if (personDetails.getGender().equals("Male"))
                {
                    //genderGroup.setSelected((ButtonModel) btnMale, true);
                    jMalebtn.setSelected(true);
                }
                else if (personDetails.getGender().equals("Female"))
                {
                    //genderGroup.setSelected(btnF, true);
                    jFemalebtn.setSelected(true);
                }
                else
                {
                    jLgbtqbtn.setSelected(true);
                }

                jPhonenotxt.setText(String.valueOf(personDetails.getPhoneno()));
                jEmailidtxt.setText(personDetails.getEmailid());
                jAddresstxt.setText(personDetails.getAddress());
                jCitycmb.setSelectedItem(personDetails.getCity());
                System.out.println(personDetails.getCity());
                jCommunitycmb.setSelectedItem(personDetails.getCommunity());
                test = true;
                break;

            }
        }
*/
    }//GEN-LAST:event_jSearchbtnActionPerformed

    private void jSearchtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSearchtxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jSearchtxtActionPerformed

    private void jNametxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jNametxtKeyTyped
        // TODO add your handling code here:
        char value = evt.getKeyChar();
        if((!Character.isAlphabetic(value))){
            evt.consume();
        }
    }//GEN-LAST:event_jNametxtKeyTyped

    private void jAddresstxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jAddresstxtKeyTyped
        // TODO add your handling code here:
        char value = evt.getKeyChar();
        if((!Character.isAlphabetic(value))){
            evt.consume();
        }
    }//GEN-LAST:event_jAddresstxtKeyTyped

    private void jAgetxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jAgetxtKeyTyped
        // TODO add your handling code here:
        char value = evt.getKeyChar();
        if((!Character.isDigit(value))){
            evt.consume();
        }
    }//GEN-LAST:event_jAgetxtKeyTyped

    private void jPhonenotxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPhonenotxtKeyTyped
        // TODO add your handling code here:
        char value = evt.getKeyChar();
        if((!Character.isDigit(value))){
            evt.consume();
        }
    }//GEN-LAST:event_jPhonenotxtKeyTyped

    private void jReadbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jReadbtnActionPerformed
        // TODO add your handling code here:
        //jCreatebtn.setEnabled(false);
        jPersonidtxt.setEditable(true);
        jUpdatebtn.setEnabled(true);
        int selectedrow = jPatienttbl.getSelectedRow();
        if (selectedrow < 0){
            JOptionPane.showMessageDialog(null, "please select");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) jPatienttbl.getModel();
        String personid = model.getValueAt(jPatienttbl.getSelectedRow(),0).toString();
        String name = model.getValueAt(jPatienttbl.getSelectedRow(),1).toString();
        String age = model.getValueAt(jPatienttbl.getSelectedRow(),2).toString();
        String gender = model.getValueAt(jPatienttbl.getSelectedRow(),3).toString();
        String phoneno = model.getValueAt(jPatienttbl.getSelectedRow(),4).toString();
        String emailid = model.getValueAt(jPatienttbl.getSelectedRow(),5).toString();
        String address = model.getValueAt(jPatienttbl.getSelectedRow(),6).toString();
        String community = model.getValueAt(jPatienttbl.getSelectedRow(),7).toString();
        String city = model.getValueAt(jPatienttbl.getSelectedRow(),8).toString();
        
        jPersonidtxt.setText(personid);
        jPersonidtxt.setEditable(false);
        jNametxt.setText(name);
        jAgetxt.setText(age);
        switch (gender) {
            case "Male" -> //genderGroup.setSelected((ButtonModel) btnMale, true);
                jMalebtn.setSelected(true);
            case "Female" -> //genderGroup.setSelected(btnF, true);
                jFemalebtn.setSelected(true);
            default -> jLgbtqbtn.setSelected(true);
        }
        jPhonenotxt.setText(phoneno);
        jEmailidtxt.setText(emailid);
        jAddresstxt.setText(address);
        jCitycmb.setSelectedItem(city);  
        jCommunitycmb.setSelectedItem(community);
    }//GEN-LAST:event_jReadbtnActionPerformed

    private void jCreatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCreatebtnActionPerformed
        // TODO add your handling code here:
        short checkName = 0;
        short checkAge = 0;
        short checkGender = 0;
        short checkPhoneno = 0;
        short checkEmailid = 0;
        short checkAddress = 0;
        short checkCommunity = 0;
        short checkCity = 0;
        if (jMalebtn.isSelected()) {
            g=1;
        }
        else if (jFemalebtn.isSelected()) {
            g=2;
        }
        else if (jLgbtqbtn.isSelected()) {
            g=3;
        }
        //short checkPersonUsername = 0;
        //short checkPersonPassword = 0;
        try{
            if (jNametxt.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "Please provide Name");
                jNametxt.setText("");
                checkName = 1;
            }
            if (jAgetxt.getText().isEmpty() && checkName==0){
                JOptionPane.showMessageDialog(null, "Please provide Age");
                jAgetxt.setText("");
                checkAge = 1;
            }
            if (g == 0 && checkName==0 && checkAge==0){
                JOptionPane.showMessageDialog(null, "Please provide Gender");
                checkGender = 1;
            }
            if (jPhonenotxt.getText().isEmpty() && checkGender==0 && checkName==0 && checkAge==0){
                JOptionPane.showMessageDialog(null, "Please provide Phone Number");
                jPhonenotxt.setText("");
                checkPhoneno = 1;
            }
            if (jEmailidtxt.getText().isEmpty() && checkGender==0 && checkName==0 && checkAge==0 
                    && checkPhoneno==0){
                JOptionPane.showMessageDialog(null, "Please provide Email ID");
                jEmailidtxt.setText("");
                checkEmailid = 1;
            }
            if (jAddresstxt.getText().isEmpty() && checkGender==0 && checkName==0 && checkAge==0 
                    && checkPhoneno==0 && checkEmailid==0){
                JOptionPane.showMessageDialog(null, "Please provide Address");
                jAddresstxt.setText("");
                checkAddress = 1;
            }
            if (jCommunitycmb.getSelectedItem().toString().isEmpty() && checkGender==0 && checkName==0 && checkAge==0 
                    && checkPhoneno==0 && checkEmailid==0 && checkAddress==0){
                JOptionPane.showMessageDialog(null, "Please provide Community");
                jCommunitycmb.setSelectedItem(null);
                checkCommunity = 1;
            }
            if (jCitycmb.getSelectedItem().toString().isEmpty() && checkGender==0 && checkName==0 && checkAge==0 
                    && checkPhoneno==0 && checkEmailid==0 && checkAddress==0 && checkCommunity==0){
                JOptionPane.showMessageDialog(null, "Please provide City");
                jCitycmb.setSelectedItem(null);
                checkCity = 1;
            }
            /*if (jPersonUsernametxt.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "Please provide Person Username");
                jPersonUsernametxt.setText("");
                checkName = 1;
            }
            if (jPersonPasswordtxt.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "Please provide Person Password");
                jPersonPasswordtxt.setText("");
                checkName = 1;
            }*/
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Error in provided Details");
                }
        if (checkCity==0 && checkGender==0 && checkName==0 && checkAge==0 
                    && checkPhoneno==0 && checkEmailid==0 && checkAddress==0 && checkCommunity==0){
                Person pr = phistory.addNewPersonDetails();
                pr.setName(jNametxt.getText());
                pr.setAge(Integer.parseInt(jAgetxt.getText()));
                switch (g) {
                    case 1 -> pr.setGender(jMalebtn.getText());
                    case 2 -> pr.setGender(jFemalebtn.getText());
                    default -> pr.setGender(jLgbtqbtn.getText());
                }
                g=0;
                pr.setPhoneno(Long.parseLong(jPhonenotxt.getText()));
                pr.setEmailid(jEmailidtxt.getText());
                pr.setAddress(jAddresstxt.getText());
                pr.setCommunity(jCommunitycmb.getSelectedItem().toString());
                pr.setCity(jCitycmb.getSelectedItem().toString());
                JOptionPane.showMessageDialog(null, "Person Created, Your Unique id is :  "+pr.getPersonid()+"\nPlease use your Unique id as PATIENT USERNAME and PATIENT PASSWORD.");
                populateTable();
                clearFields();
                //PersonInfojPanel personinfo = new PersonInfojPanel(person,patient);
                //personinfo.setVisible(true);
                //setVisible(false);
        } else {
                JOptionPane.showMessageDialog(null, "Cannot Create Person, Please provide all the details");
        }
    }//GEN-LAST:event_jCreatebtnActionPerformed

    private void jUpdatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jUpdatebtnActionPerformed
        // TODO add your handling code here:
        short checkName = 0;
        short checkAge = 0;
        short checkGender = 0;
        short checkPhoneno = 0;
        short checkEmailid = 0;
        short checkAddress = 0;
        short checkCommunity = 0;
        short checkCity = 0;
        if (jMalebtn.isSelected()) {
            g=1;
        }
        else if (jFemalebtn.isSelected()) {
            g=2;
        }
        else if (jLgbtqbtn.isSelected()) {
            g=3;
        }
        //short checkPersonUsername = 0;
        //short checkPersonPassword = 0;
        try{
            if (jNametxt.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "Please provide Name");
                jNametxt.setText("");
                checkName = 1;
            }
            if (jAgetxt.getText().isEmpty() && checkName==0){
                JOptionPane.showMessageDialog(null, "Please provide Age");
                jAgetxt.setText("");
                checkAge = 1;
            }
            if (g == 0 && checkName==0 && checkAge==0){
                JOptionPane.showMessageDialog(null, "Please provide Gender");
                checkGender = 1;
            }
            if (jPhonenotxt.getText().isEmpty() && checkGender==0 && checkName==0 && checkAge==0){
                JOptionPane.showMessageDialog(null, "Please provide Phone Number");
                jPhonenotxt.setText("");
                checkPhoneno = 1;
            }
            if (jEmailidtxt.getText().isEmpty() && checkGender==0 && checkName==0 && checkAge==0 
                    && checkPhoneno==0){
                JOptionPane.showMessageDialog(null, "Please provide Email ID");
                jEmailidtxt.setText("");
                checkEmailid = 1;
            }
            if (jAddresstxt.getText().isEmpty() && checkGender==0 && checkName==0 && checkAge==0 
                    && checkPhoneno==0 && checkEmailid==0){
                JOptionPane.showMessageDialog(null, "Please provide Address");
                jAddresstxt.setText("");
                checkAddress = 1;
            }
            if (jCommunitycmb.getSelectedItem().toString().isEmpty() && checkGender==0 && checkName==0 && checkAge==0 
                    && checkPhoneno==0 && checkEmailid==0 && checkAddress==0){
                JOptionPane.showMessageDialog(null, "Please provide Community");
                jCommunitycmb.setSelectedItem(null);
                checkCommunity = 1;
            }
            if (jCitycmb.getSelectedItem().toString().isEmpty() && checkGender==0 && checkName==0 && checkAge==0 
                    && checkPhoneno==0 && checkEmailid==0 && checkAddress==0 && checkCommunity==0){
                JOptionPane.showMessageDialog(null, "Please provide City");
                jCitycmb.setSelectedItem(null);
                checkCity = 1;
            }
            /*if (jPersonUsernametxt.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "Please provide Person Username");
                jPersonUsernametxt.setText("");
                checkName = 1;
            }
            if (jPersonPasswordtxt.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "Please provide Person Password");
                jPersonPasswordtxt.setText("");
                checkName = 1;
            }*/
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Error in provided Details");
                }
        if (checkCity==0 && checkGender==0 && checkName==0 && checkAge==0 
                    && checkPhoneno==0 && checkEmailid==0 && checkAddress==0 && checkCommunity==0){
                int selectedRowIndex = jPatienttbl.getSelectedRow();
                DefaultTableModel model = (DefaultTableModel) jPatienttbl.getModel();
                if (selectedRowIndex >= 0)
                {
                    model.setValueAt(jPersonidtxt.getText(), selectedRowIndex,0);
                    model.setValueAt(jNametxt.getText(), selectedRowIndex,1);
                    model.setValueAt(jAgetxt.getText(), selectedRowIndex,2);
                    String genderValue="";
                    if (jMalebtn.isSelected()) genderValue="Male";
                    else if (jFemalebtn.isSelected()) genderValue="Female";
                    else if (jLgbtqbtn.isSelected()) genderValue="LGBTQ+";
                    model.setValueAt(genderValue, selectedRowIndex, 3);
                    model.setValueAt(jPhonenotxt.getText(), selectedRowIndex,4);
                    model.setValueAt(jEmailidtxt.getText(), selectedRowIndex,5);
                    model.setValueAt(jAddresstxt.getText(), selectedRowIndex,6);
                    model.setValueAt(jCommunitycmb.getSelectedItem(), selectedRowIndex,7);
                    model.setValueAt(jCitycmb.getSelectedItem(), selectedRowIndex,8);
                }
                else{
                    JOptionPane.showMessageDialog(this, "Please Select a row to View.");
                }
                int personid = (Integer.parseInt(jPersonidtxt.getText()));
                String name = (jNametxt.getText());
                int age = (Integer.parseInt(jAgetxt.getText()));
                String gender;
                switch (g) {
                    case 1 -> gender = (jMalebtn.getText());
                    case 2 -> gender = (jFemalebtn.getText());
                    default -> gender = (jLgbtqbtn.getText());
                }
                long phoneno = (Long.parseLong(jPhonenotxt.getText()));
                String emailid = (jEmailidtxt.getText());
                String address = (jAddresstxt.getText());
                String community = (jCommunitycmb.getSelectedItem().toString());
                String city = (jCitycmb.getSelectedItem().toString());
                Person p = new Person(personid,name,age,gender,phoneno,emailid,address,city,community);
                JOptionPane.showMessageDialog(null, "Person Data Updated for Unique id :  "+personid);
                clearFields();
                //PersonInfojPanel personinfo = new PersonInfojPanel(person,patient);
                //personinfo.setVisible(true);
                //setVisible(false);
        } else {
                JOptionPane.showMessageDialog(null, "Cannot Update Person, Please provide all the details");
        }   
        
    }//GEN-LAST:event_jUpdatebtnActionPerformed

    private void jMalebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMalebtnActionPerformed
        // TODO add your handling code here:
        if (jMalebtn.isSelected()) {
            g=1;
        }
    }//GEN-LAST:event_jMalebtnActionPerformed

    private void jFemalebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFemalebtnActionPerformed
        // TODO add your handling code here:
        if (jFemalebtn.isSelected()) {
            g=2;
        }
    }//GEN-LAST:event_jFemalebtnActionPerformed

    private void jLgbtqbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jLgbtqbtnActionPerformed
        // TODO add your handling code here:
        if (jLgbtqbtn.isSelected()) {
            g=3;
        }
    }//GEN-LAST:event_jLgbtqbtnActionPerformed

    private void jDeletebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDeletebtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jPatienttbl.getModel();
        if (jPatienttbl.getSelectedRowCount()==1) {
          model.removeRow(jPatienttbl.getSelectedRow());
          JOptionPane.showMessageDialog(this, "Person Profile deleted.");
        }
        else{
            if(jPatienttbl.getSelectedRowCount()==0){
                JOptionPane.showMessageDialog(this, "Select a row");
            }
            else{
                JOptionPane.showMessageDialog(this,"Please select only one row to delete.");
            }
        }
    }//GEN-LAST:event_jDeletebtnActionPerformed

    private void loadComboBoxData(){
        jCitycmb.removeAllItems();
        jCommunitycmb.removeAllItems();
        for(City city: SystemHospitaljPanel.cityList){
            jCitycmb.addItem(city.getCityName());
        }
        for(City city:SystemHospitaljPanel.cityList){
            jCommunitycmb.addItem(city.getCommunity());
        }
        for(City city: HospitalAdminHospitaljPanel.cityList){
            jCitycmb.addItem(city.getCityName());
        }
        for(City city: HospitalAdminHospitaljPanel.cityList){
            jCommunitycmb.addItem(city.getCommunity());
        }
        jCitycmb.setSelectedIndex(-1);
        jCommunitycmb.setSelectedIndex(-1);

    }
    
    private void populateTable() {
        
        DefaultTableModel model = (DefaultTableModel) jPatienttbl.getModel();
        model.setRowCount(0);
        
        for (Person pd : phistory.getPerson()){
          
            Object[] row = new Object[9];
            row[0] = pd.getPersonid();
            row[1] = pd.getName();
            row[2] = pd.getAge();
            row[3] = pd.getGender();
            row[4] = pd.getPhoneno();
            row[5] = pd.getEmailid();
            row[6] = pd.getAddress();
            row[7] = pd.getCommunity();
            row[8] = pd.getCity();
            
            model.addRow(row);

        }

    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jAddresslbl;
    private javax.swing.JTextField jAddresstxt;
    private javax.swing.JLabel jAgelbl;
    private javax.swing.JTextField jAgetxt;
    private javax.swing.JComboBox<String> jCitycmb;
    private javax.swing.JLabel jCitylbl;
    private javax.swing.JComboBox<String> jCommunitycmb;
    private javax.swing.JLabel jCommunitylbl;
    private javax.swing.JButton jCreatebtn;
    private javax.swing.JButton jDeletebtn;
    private javax.swing.JLabel jEmailidlbl;
    private javax.swing.JTextField jEmailidtxt;
    private javax.swing.JRadioButton jFemalebtn;
    private javax.swing.ButtonGroup jGenderbtngrp;
    private javax.swing.JLabel jGenderlbl;
    private javax.swing.JRadioButton jLgbtqbtn;
    private javax.swing.JRadioButton jMalebtn;
    private javax.swing.JLabel jNamelbl;
    private javax.swing.JTextField jNametxt;
    private javax.swing.JScrollPane jPScrollPane;
    private javax.swing.JLabel jPatientdetailslbl;
    private javax.swing.JTable jPatienttbl;
    private javax.swing.JLabel jPersonalinfolbl;
    private javax.swing.JLabel jPersonidlbl;
    private javax.swing.JTextField jPersonidtxt;
    private javax.swing.JLabel jPhonenolbl;
    private javax.swing.JTextField jPhonenotxt;
    private javax.swing.JButton jReadbtn;
    private javax.swing.JButton jSearchbtn;
    private javax.swing.JTextField jSearchtxt;
    private javax.swing.JButton jUpdatebtn;
    // End of variables declaration//GEN-END:variables
}
